<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="web.dao.face.AdminDao">

	<select resultType="int" parameterType="hashMap" id="getTotalCount"> 
		SELECT COUNT(*) FROM sellerLoc 
		where ${condition} like '%' || #{searchWord} || '%' order by locno desc 
	</select>

	<select resultType="web.dto.SellerLoc" parameterType="hashMap" id="getPagingList"> 
		SELECT * FROM ( 
			SELECT rownum rnum, B.* FROM ( 
				SELECT * FROM sellerLoc 
				WHERE ${condition} like '%' || #{searchWord} || '%' 
				ORDER BY locno desc ) 
			B ORDER BY rnum ) R 
		WHERE rnum BETWEEN #{p.startNo } AND #{p.endNo } 
	</select>
	
	<delete parameterType="web.dto.SellerLoc" id="adminSellerListDelete"> 
		DELETE sellerLoc where locNo = #{locNo } 
	</delete>
	
	<select resultType="web.dto.SellerLoc" parameterType="web.dto.SellerLoc" id="getSellerInfo"> 
		SELECT * FROM sellerLoc where locNo = #{locNo } 
	</select>

	<select id="viewLoc" parameterType="String" resultType="web.dto.SellerLoc">
		SELECT DISTINCT station FROM SellerLoc
		WHERE zone LIKE '%' || #{zone } || '%'
	</select>

	<!--  -->
	<select id="viewDetail" parameterType="String" resultType="hashmap">
		SELECT * FROM sellerInfo, (select sellerId, spot from SellerLoc WHERE station LIKE '%' || #{station } || '%') S
		WHERE sellerInfo.sellerId = S.sellerId

	</select>
<!-- 	<insert id="buyerJoin" parameterType="web.dto.BuyerInfo"> -->
<!-- 		INSERT INTO buyerinfo(buyerid, buyerpw, buyerphone, buyeremail, buyername) -->
<!-- 		VALUES(#{buyerId }, #{buyerPw }, #{buyerPhone }, #{buyerEmail }, #{buyerName } ) -->
<!-- 	</insert> -->

	<select resultType="int" id="getNoticeCount">
		SELECT COUNT(*) FROM notice
	</select>

	<select resultType="web.dto.Notice" parameterType="web.util.Paging" id="getNoticeList">
		SELECT * FROM ( 
			SELECT rownum rnum, B.* FROM( 
				SELECT * FROM Noticeorder by NoticeNo desc ) B
			ORDER BY rnum ) R
		WHERE rnum BETWEEN #{startNo } AND #{endNo } 
	</select>

	<select resultType="web.dto.Notice" parameterType="web.dto.Notice" id="noticeView">
		SELECT * FROM Noticewhere noticeNo = #{noticeNo } 
	</select>
  
  <update id="addHit" parameterType="web.dto.Notice">

    UPDATE NOTICE
    SET noticehit = (SELECT noticehit from notice where noticeNo=#{noticeNo }) + 1
    WHERE noticeNo = #{noticeNo }
   </update>


	<delete parameterType="web.dto.Notice" id="adminNoticeDelete">
		delete noticewhere noticeNo = #{noticeNo } 
	</delete>
  
  <insert id="noticeInsert" parameterType="web.dto.Notice">
	INSERT INTO NOTICE(noticeNo, noticeTitle, noticecontent, noticeImg)
	values(seq_notice.nextval, #{noticeTitle }, #{noticeContent }, #{noticeImg })
</insert>
  
  <update id="noticeUpdate" parameterType="web.dto.Notice">
	UPDATE notice
	set noticeTitle = #{noticeTitle },
		noticeContent = #{noticeContent },
		noticeImg = #{noticeImg }
	

</update>
	
	<select id="selectCntLogin" parameterType="web.dto.AdminInfo" resultType="int">
		SELECT count(*) FROM adminInfo
		WHERE 1=1
			AND adminId=#{adminId } 
			AND adminPw=#{adminPw }
	</select>
	
	<select id="selectSellerBigdomInfo" parameterType="web.util.Paging" resultType="web.dto.SellerBigdomInfo">
		SELECT * FROM (
		    SELECT rownum rnum, B.* FROM (
		        SELECT si.*, sl.bigdomId as br
		        FROM sellerInfo si
		        LEFT OUTER JOIN sellerLoc sl
		        ON si.sellerId = sl.sellerId
		        ORDER BY si.sellerid desc
		    ) B
		    ORDER BY rnum
		) 
		WHERE rnum BETWEEN #{startNo } AND #{endNo }
	</select>
	
	<select id="selectBuyerInfoList" resultType="web.dto.BuyerInfo">
		SELECT * FROM (
		    SELECT rownum rnum, B.* FROM (
		        SELECT * FROM buyerInfo
				ORDER BY buyerId desc
		    ) B
		    ORDER BY rnum
		) 
		WHERE rnum BETWEEN #{startNo } AND #{endNo }
	</select>
	
	<select id="selectBigdomSellerInfo" resultType="web.dto.BigdomSellerInfo">
		SELECT * FROM (
		    SELECT rownum rnum, B.* FROM (
		        SELECT b.bigdomId, b.bigdomPw, s.sellerId
				FROM bigdomInfo b
				LEFT OUTER JOIN sellerInfo s
				ON b.bigdomId = s.bigdomId
				ORDER BY b.bigdomid desc
		    ) B
		    ORDER BY rnum
		) 
		WHERE rnum BETWEEN #{startNo } AND #{endNo }
	</select>
	
	<select id="selectSBInfo" resultType="web.dto.SellerBigdomInfo" parameterType="String">
		SELECT si.*, sl.bigdomId
		FROM sellerInfo si
		LEFT OUTER JOIN sellerLoc sl
		ON si.sellerId = sl.sellerId
		WHERE si.sellerId=#{_parameter }
	</select>
	
	<update id="updateSellerInfo" parameterType="web.dto.SellerBigdomInfo">
		UPDATE sellerInfo
		SET sellerName=#{sellerName }, sellerPw=#{sellerPw }, sellerPhone=#{sellerPhone }
		WHERE sellerId=#{sellerId }
	</update>
	
<!-- 	<delete id="deleteSellerInfo" parameterType="String"> -->
<!-- 		DELETE sellerInfo -->
<!-- 		WHERE sellerId=#{sellerId } -->
<!-- 	</delete> -->
	
	<update id="updateSellerAndBigdomNull" parameterType="String">
		UPDATE sellerLoc
		SET sellerId=null, bigdomId=null
		WHERE sellerId=#{sellerId }
	</update>
	
	<select id="selectSellerStatus" parameterType="String" resultType="int">
		SELECT count(*) FROM sellerLoc
		WHERE sellerId=#{sellerId }
	</select>
	
	<select id="selectBigdomStatus" parameterType="web.dto.SellerBigdomInfo" resultType="int">
		SELECT count(*) FROM sellerLoc
		WHERE sellerId=#{sellerId } AND bigdomId=#{bigdomId }
	</select>
	
	<update id="updateBigdomDeactivate" parameterType="web.dto.SellerBigdomInfo">
		UPDATE sellerLoc
		SET bigdomId=null
		WHERE sellerId=#{sellerId } AND bigdomId=#{bigdomId }
	</update>
	
	<update id="updateBigdomActivate" parameterType="web.dto.SellerBigdomInfo">
		UPDATE sellerLoc
		SET bigdomId=#{bigdomId }
		WHERE sellerId=#{sellerId }
	</update>
	
	<select id="selectLastSeller" resultType="String">
		SELECT * FROM (
			SELECT sellerId FROM sellerInfo ORDER BY sellerId desc)
		WHERE ROWNUM = 1
	</select>
	
	<insert id="insertNewBigdom" parameterType="web.dto.BigdomInfo">
		INSERT INTO bigdominfo(bigdomid, bigdompw, sort)
		VALUES (#{bigdomId },#{bigdomPw },#{sort })
	</insert>
	
	<insert id="insertNewSeller" parameterType="web.dto.SellerInfo">
		INSERT INTO sellerInfo(sellerid,sellerpw,sellername,sort,bigdomid)
		VALUES (#{sellerId },#{sellerPw },#{sellerName },#{sort },#{bigdomId })
	</insert>
	
	<select id="selectLastSellerInfo" resultType="web.dto.SellerInfo">
		SELECT * FROM (
			SELECT * FROM sellerInfo ORDER BY sellerId desc)
		WHERE ROWNUM = 1
	</select>
	
	<select id="selectBuyerInfo" parameterType="String" resultType="web.dto.BuyerInfo">
		SELECT * FROM buyerInfo
		WHERE buyerId=#{buyerId }
	</select>
	
	<update id="updateBuyerInfo" parameterType="web.dto.BuyerInfo">
		UPDATE buyerInfo
		SET buyerName=#{buyerName }, buyerPw=#{buyerPw }, buyerPhone=#{buyerPhone }, buyerEmail=#{buyerEmail }
		WHERE buyerId=#{buyerId }
	</update>
	
	<delete id="deleteBuyerInfo" parameterType="web.dto.BuyerInfo">
		DELETE buyerInfo
		WHERE buyerId=#{buyerId }
	</delete>
	
	<select id="selectBigdomInfo" parameterType="web.dto.BigdomSellerInfo" resultType="web.dto.BigdomSellerInfo">
		SELECT b.bigdomId, b.bigdomPw, s.sellerId
		FROM bigdomInfo b
		LEFT OUTER JOIN sellerInfo s
		ON b.bigdomId = s.bigdomId
		WHERE b.bigdomId = #{bigdomId }
		ORDER BY b.bigdomid
	</select>
	
	<update id="updateBigdomInfo" parameterType="web.dto.BigdomInfo">
		UPDATE bigdomInfo
		SET bigdomPw=#{bigdomPw }
		WHERE bigdomId=#{bigdomId }
	</update>
	
	<!-- ****** 계정관리 페이징 ****** -->
	<select id="selectSellerInfoCnt" resultType="int">
		SELECT count(*) FROM sellerInfo
	</select>
	
	<select id="selectBuyerInfoCnt" resultType="int">
		SELECT count(*) FROM buyerInfo
	</select>
	
	<select id="selectBigdomInfoCnt" resultType="int">
		SELECT count(*) FROM bigdomInfo
	</select>
	<!-- ***************************** 계정관리 페이징 끝 --> 
	
</mapper>